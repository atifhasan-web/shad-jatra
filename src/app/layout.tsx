import type { Metadata } from 'next';
import Link from 'next/link';
import './globals.css';
import { Toaster } from "@/components/ui/toaster"
import { Logo } from '@/components/Logo';
import { Button } from '@/components/ui/button';
import { ThemeToggle } from '@/components/ThemeToggle';

export const metadata: Metadata = {
  title: {
    default: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛ | ржЖржкржирж╛рж░ рж░рж╛ржирзНржирж╛рж░ рж╕ржЩрзНржЧрзА',
    template: '%s | рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛',
  },
  description: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛ ржЕрзНржпрж╛ржкрзЗрж░ ржорж╛ржзрзНржпржорзЗ рж╕рзЗрж░рж╛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж░рзЗрж╕рж┐ржкрж┐ ржЦрзБржБржЬрзБржи ржПржмржВ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛, ржЯрж╛ржЗржорж╛рж░ ржПржмржВ ржнржпрж╝рзЗрж╕ рж╕рж╣рж╛ржпрж╝рж┐ржХрж╛ ржЖржкржирж╛рж░ рж░рж╛ржирзНржирж╛ржХрзЗ ржХрж░ржмрзЗ ржЖрж░ржУ рж╕рж╣ржЬ ржУ ржЖржиржирзНржжржоржпрж╝ред',
  keywords: ['ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж░рзЗрж╕рж┐ржкрж┐', 'рж░рж╛ржирзНржирж╛', 'ржмрж╛ржВрж▓рж╛ рж░рж╛ржирзНржирж╛', 'ржХрж╛ржЪрзНржЪрж┐ ржмрж┐рж░рж┐рзЯрж╛ржирж┐', 'ржЗрж▓рж┐рж╢ ржорж╛ржЫ', 'рж░рж╛ржирзНржирж╛рж░ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛', 'Bangladeshi recipe', 'cooking', 'Bengali cuisine', 'Kacchi Biryani', 'Ilish fish', 'cooking guide'],
  authors: [{ name: 'Atif Hasan' }],
  openGraph: {
    title: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛ | рж╕рзЗрж░рж╛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж░рж╛ржирзНржирж╛рж░ рж╕рж╣ржЬ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛',
    description: 'ржЖржкржирж╛рж░ ржкрзНрж░рж┐ржпрж╝ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА ржЦрж╛ржмрж╛рж░ рж░рж╛ржирзНржирж╛ ржХрж░рж╛рж░ ржЬржирзНржп ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ ржПржмржВ рж╕рзНржорж╛рж░рзНржЯ ржлрж┐ржЪрж╛рж░ рж╕рж╣ рж╕рзЗрж░рж╛ ржЕрзНржпрж╛ржкред',
    url: 'https://chefcue.app', // Replace with your actual domain
    siteName: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛',
    images: [
      {
        url: '/og-image.png', // Updated OG image
        width: 1200,
        height: 630,
        alt: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛ - ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж░рзЗрж╕рж┐ржкрж┐ ржЕрзНржпрж╛ржк',
      },
    ],
    locale: 'bn_BD',
    type: 'website',
  },
  twitter: {
    card: 'summary_large_image',
    title: 'рж╕рзНржмрж╛ржж ржпрж╛рждрзНрж░рж╛ | рж╕рзЗрж░рж╛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж░рж╛ржирзНржирж╛рж░ рж╕рж╣ржЬ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛',
    description: 'ржЖржкржирж╛рж░ ржкрзНрж░рж┐ржпрж╝ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА ржЦрж╛ржмрж╛рж░ рж░рж╛ржирзНржирж╛ ржХрж░рж╛рж░ ржЬржирзНржп ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛ ржПржмржВ рж╕рзНржорж╛рж░рзНржЯ ржлрж┐ржЪрж╛рж░ рж╕рж╣ рж╕рзЗрж░рж╛ ржЕрзНржпрж╛ржкред',
    images: ['/twitter-image.png'], // Updated Twitter image
  },
  icons: {
    icon: `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ЁЯСитАНЁЯН│</text></svg>`,
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      'max-video-preview': -1,
      'max-image-preview': 'large',
      'max-snippet': -1,
    },
  },
  // We can add more specific metadata on individual pages
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="bn" className="dark">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Poppins:wght@700&display=swap" rel="stylesheet" />
      </head>
      <body className="font-body antialiased bg-background text-foreground">
        <div className="flex flex-col min-h-screen">
          <header className="p-4 border-b border-white/10 sticky top-0 bg-background/80 backdrop-blur-sm z-10">
            <div className="container mx-auto flex justify-between items-center">
              <Link href="/">
                <Logo />
              </Link>
              <nav className="flex items-center gap-2">
                <ThemeToggle />
                <Button asChild variant="ghost">
                  <Link href="/recipelist">
                    рждрж╛рж▓рж┐ржХрж╛
                  </Link>
                </Button>
              </nav>
            </div>
          </header>
          {children}
          <Toaster />
        </div>
      </body>
    </html>
  );
}
